% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mbl_pca.R
\name{mbl_pca}
\alias{mbl_pca}
\title{Perform a principle components analysis over a DGEList}
\usage{
mbl_pca(x, ntop = 500, center = TRUE, scale. = FALSE, ..., pcs = 1:10)
}
\arguments{
\item{x}{a `DGEList` of expression data}

\item{ntop}{the number of genes to include in the PCA decomposition. Genes
are ordered by ones with the highest variance to lowest.}

\item{center}{a logical value indicating whether the variables should be
shifted to be zero centered. Alternately, a vector of length equal the
number of columns of x can be supplied. The value is passed to scale.}

\item{scale.}{a logical value indicating whether the variables should be
shifted to be zero centered. Alternately, a vector of length equal the
number of columns of x can be supplied. The value is passed to scale.}
}
\value{
a list with `$loadings`, `$percentVar`, ...
}
\description{
This function performs a PCA over a DGEList object, and returns the
loadings (the position of the samples on the new axes/PCs), and the perecent
of variance explained by each PC stored in the `$data` and `$percentVar`
elements on the returned object.

The basic code to perform the PCA was and calculate the percentage of various
explained per PC was taken from the `DESeq2::plotPCA` function.
}
\examples{
ym <- mbl_load_rnaseq("mouse", "may")
pca <- mbl_pca(ym)
ggplot(pca$data, aes(PC1, PC2, color = genotype, shape = source)) +
  geom_point()
}
